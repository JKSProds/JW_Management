@model JW_Management.Models.Reuniao
@{
    ViewData["Title"] = "Reuniões";
}

<style>
    .tabs-content li {
        display: none;
        list-style: none;
    }

    .tabs-content li.is-active {
        display: block;
    }
</style>

<form asp-action="Index" method="get" id="">
    <div class="container">
        <div class="columns">
            <div class="column">
                <div class="tile">
                    <div class="tile is-parent is-vertical">
                        <article class="tile is-child notification is-info">
                            <p class="title">
                                <span class="icon mr-3">
                                    <i class="fa-solid fa-user-tie"></i>
                                </span>
                                <span>Reunião - @Model.SemanaReuniao</span>
                            </p>
                        </article>
                    </div>
                </div>
            </div>
            <div class="column">
                    <div class="field has-addons has-addons-right mx-1 is-flex-wrap-wrap" style="width:100%">
                    <div class="buttons is-right">
                        <p class="control">
                            <button type="button" class="button is-success is-fullwidth " onclick="Bulma('#modalAdicionarDesignacao').modal().open();">
                                <span class="icon">
                                    <i class="fa-solid fa-plus"></i>
                                </span>
                                <span>Adicionar Designação</span>
                            </button>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<hr />
<div class="container">
    @if (Model.Designacoes!.Count() == 0)
    {
        <br />
        <button class="button is-danger is-large is-rounded is-fullwidth is-disabled">
            Não foram encontradas
            designações!
        </button>
    }
    else
    {

    <div class="tabs-wrapper">
        <div class="tabs is-centered is-boxed is-medium">
            <ul>
                <li class="is-active">
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-user-tie"></i></span>
                    <span>Tesouros</span>
                </a>
                </li>                
                <li>
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-people-arrows"></i></span>
                    <span>Designacoes</span>
                </a>
                </li>
                <li>
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-hand"></i></span>
                    <span>Viver Como Cristaos</span>
                </a>
                </li>
                <li>
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-book"></i></span>
                    <span>Fim de Semana</span>
                </a>
                </li>
                <li>
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-book-open"></i></span>
                    <span>Sentinela</span>
                </a>
                </li>
                <li>
                <a>
                    <span class="icon is-small"><i class="fa-solid fa-person-circle-check"></i></span>
                    <span>Responsabilidades</span>
                </a>
                </li>
            </ul>
        </div>

        <div class="tabs-content">
            @for (int i=0; i<600; i+=100) {
                <ul>
                    <li class="@(i == 0 ? "is-active" : "")">
                        <div class="task-container columns is-multiline mx-1">
                            @foreach(var item in Model.ObterDesignacoesTipo(i)) {
                                <div class="column is-6">
                                    <div class="card">
                                        <header class="card-header card-toggle @(Model.Designacoes.Where(d => d.TipoDesignacao == item.TipoDesignacao && d.Local == item.Local).Where(u => !u.Atribuida).Count() > 0 ? "has-background-danger" : "")" >
                                            <p class="is-size-6 my-1 has-text-centered column">
                                                <b>@item.TipoDesignacao!.Descricao</b>
                                            </p>
                                             <input class="input is-rounded my-auto mr-1 minutos" style="max-width:75px" type="number" value="@item.NMin" oninput="this.parentElement.parentElement.childNodes[1].classList.remove('has-background-danger');this.parentElement.parentElement.childNodes[1].classList.add('has-background-warning')">
                                        </header>
                                        <div class="card-content has-text-centered">
                                            <div class="content">
                                                <div class="field is-horizontal">
                                                    <div class="field-label is-normal">
                                                        <label class="label">Tema</label>
                                                    </div>
                                                    <div class="field-body">
                                                        <div class="field">
                                                            <p class="control">
                                                                <input class="input tema" type="text" oninput="this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.remove('has-background-danger');this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.add('has-background-warning')" value="@item.NomeDesignacao" placeholder="Tema da Designacao">
                                                            </p>
                                                        </div>
                                                    </div>
                                                </div>
                                                <hr>
                                                <div class="columns is-centered is-vcentered">
                                                    <div class="column m-1">
                                                        @foreach (var u in @Model.Designacoes.Where(d => d.TipoDesignacao == item.TipoDesignacao && d.Local == item.Local)) {
                                                        <div class="field">
                                                            <div class="field has-addons">
                                                                <div class="control has-icons-left" style="width:100%">
                                                                        <span class="select is-fullwidth">
                                                                            <select class="select" style="height: auto" asp-for="@u.Publicador.Id" id="@u.Stamp" onchange="this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.remove('has-background-danger');this.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.add('has-background-warning')"
                                                                                    asp-items="@(new SelectList(@ViewBag.Publicadores, "Value", "Text"))">
                                                                            </select>
                                                                        </span>
                                                                        <span class="icon is-small is-left">
                                                                            <i class="fa-solid fa-user-tie"></i>
                                                                        </span>
                                                                </div>
                                                                <div class="control">
                                                                    <button type="button" class="button is-danger disable-dbl-tap-zoom"
                                                                            onclick="ConfirmApagar(this.parentElement.parentElement.querySelector('select').id);">
                                                                        <span class="icon">
                                                                            <i class="fas fa-trash-can"></i>
                                                                        </span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        }
                                                    </div>
                                                    @if (Model.Designacoes.Where(d => d.TipoDesignacao == item.TipoDesignacao && item.TipoDesignacao.Salas>1).Count() > 1) {
                                                        <div class="column">
                                                            <div class="field">
                                                            <div class="field has-addons">
                                                                <div class="control" style="width:100%">
                                                                    <button type="button" class="button is-primary disable-dbl-tap-zoom is-fullwidth">
                                                                        <span class="icon">
                                                                            <i class="fas fa-warehouse"></i>
                                                                        </span>
                                                                        <span>@item.Local</span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <footer class="card-footer">
                                            <div class="container is-12">
                                                <div class="buttons has-addons">
                                                    <button class="button is-info is-fullwidth is-large card-footer-item"
                                                                onclick="AdicionarPublicadorDesignacaoConfirmar(this.parentElement.parentElement.parentElement.parentElement.querySelector('select').id);">
                                                            <i class="fa-solid fa-circle-plus"></i>
                                                    </button>
                                                    <button class="button is-success is-fullwidth is-large card-footer-item"
                                                                onclick="AtualizarDesignacao(Array.from(this.parentElement.parentElement.parentElement.parentElement.querySelectorAll('select')).map(function(selectElement) {return selectElement.id + '|' + selectElement.value;}), this.parentElement.parentElement.parentElement.parentElement.querySelector('.minutos').value, this.parentElement.parentElement.parentElement.parentElement.querySelector('.tema').value);">
                                                            <i class="fa-solid fa-floppy-disk"></i>
                                                    </button>
                                                    <button class="button is-danger is-fullwidth is-large card-footer-item"
                                                                onclick="ConfirmApagar(Array.from(this.parentElement.parentElement.parentElement.parentElement.querySelectorAll('select')).map(function(selectElement) {return selectElement.id;}));">
                                                            <i class="fa-solid fa-trash-can"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </footer>
                                    </div>
                                </div>
                            }
                        </div>
                    </li>
                </ul>  
            }
        </div>
    </div>
    }

</div>

<div id="modalAdicionarDesignacao" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">
                <span class="icon">
                    <i class="fas fa-circle-plus"></i>
                </span>
                <span>Adicionar - Designação</span>
            </p>
            <button type="button" class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div class="modal-body">
                <div class="field">
                    <label class="label">Designação</label>
                    <div class="field has-addons">
                        <div class="control " style="width:100%">
                            <span class="select is-fullwidth">
                                <select class="select" id="txtIdTipo" style="height: auto"
                                        asp-items="@(new SelectList(@ViewBag.Tipos, "Value", "Text"))">
                                </select>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="field has-addons">
                    <div class="control has-icons-left" style="width:100%">
                        <span class="select is-fullwidth">
                            <select class="select" id="txtLocal" style="height: auto">
                                <option value="Auditório">Auditório</option>
                                <option value="Sala 2">Sala 2</option>
                            </select>
                        </span>
                        <span class="icon is-small is-left">
                            <i class="fa-solid fa-warehouse"></i>
                        </span>
                    </div>
                </div>
            </div>
        </section>
        <footer class="modal-card-foot">
            <a class="button is-info is-large is-fullwidth"
               onclick="AdicionarDesignacao('@Model.SemanaReuniao', document.getElementById('txtIdTipo').value,document.getElementById('txtLocal').value)">
                <span class="icon">
                    <i class="fa-regular fa-circle-plus"></i>
                </span>
                <span>Adicionar</span>
            </a>
            <button type="button" class="button is-large is-fullwidth is-danger"
                    onclick="Bulma('#modalAdicionarDesignacao').modal().close();" href="javascript:;">
                <span class="icon">
                    <i class="fa-regular fa-circle-xmark"></i>
                </span>
                <span>Fechar</span>
            </button>
        </footer>
    </div>
</div>

<div id="modalAdicionarPublicadorDesignacao" class="modal">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">
                <span class="icon">
                    <i class="fas fa-circle-plus"></i>
                </span>
                <span>Adicionar - Publicador</span>
            </p>
            <button type="button" class="delete" aria-label="close"></button>
        </header>
        <section class="modal-card-body">
            <div class="modal-body">
                <div class="field">
                    <label class="label">Publicador</label>
                    <div class="field has-addons">
                        <div class="control has-icons-left" style="width:100%">
                            <span class="select is-fullwidth">
                                <select class="select" id="txtIdPubAddDesignacao" style="height: auto"
                                        asp-items="@(new SelectList(@ViewBag.Publicadores, "Value", "Text"))">
                                </select>
                            </span>
                            <span class="icon is-small is-left">
                                <i class="fa-solid fa-user-tie"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <footer class="modal-card-foot">
            <a class="button is-info is-large is-fullwidth"
               onclick="AdicionarPublicadorDesignacao(document.getElementById('txtHiddenStamp').value,document.getElementById('txtIdPubAddDesignacao').value)">
                <span class="icon">
                    <i class="fa-regular fa-circle-plus"></i>
                </span>
                <span>Adicionar</span>
            </a>
            <button type="button" class="button is-large is-fullwidth is-danger"
                    onclick="Bulma('#modalAdicionarDesignacao').modal().close();" href="javascript:;">
                <span class="icon">
                    <i class="fa-regular fa-circle-xmark"></i>
                </span>
                <span>Fechar</span>
            </button>
        </footer>
    </div>
</div>

<div class="modal" id="ModalConfirmApagar">
    <div class="modal-background"></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">Apagar Designação</p>
        </header>
        <section class="modal-card-body">
            <div class="modal-body">
                <p>Tem a certeza que deseja apagar esta designação?</p>
            </div>
        </section>
        <footer class="modal-card-foot">
            <button class="button is-danger is-fullwidth is-large"
                    onclick="ApagarDesignacao(document.getElementById('txtHiddenStamp').value);">
                <span class="icon">
                    <i class="fas fa-trash-can"></i>
                </span>
                <span>Confirmar</span>
            </button>
            <button class="button is-fullwidth is-large" onclick="Bulma('#ModalConfirmApagar').modal().close();">
                <span class="icon">
                    <i class="fa-solid fa-circle-xmark"></i>
                </span>
                <span>Não</span>
            </button>
        </footer>
    </div>
</div>

<input id="txtHiddenStamp" hidden />

<script>

function AdicionarDesignacao(id, tipo, local) {
        $.ajax({
            url: '/Reunioes/Designacao/',
            data: { "id": id, "tipo": tipo, "local": local },
            type: "POST",
            success: function (data) {
                notify("Designacao criada com sucesso!");
                window.location.reload();
            },
            error: function (response) {
                notifyError('Ocorreu um erro ao criar a designacao!');
            },
            failure: function (response) {
                notifyError('Falha ao criar a designacao!');
            }
        });
}

function AtualizarDesignacao(stampList, minutos, tema) {
      stampList.forEach(function(stamp) {
        $.ajax({
            url: '/Reunioes/Designacao/',
            data: { "id": stamp.split('|')[0], "pub": stamp.split('|')[1], "minutos": minutos, "tema": tema },
            type: "PUT",
            success: function (data) {
                document.getElementById(stamp.split('|')[0]).parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.remove('has-background-warning');
                document.getElementById(stamp.split('|')[0]).parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.childNodes[1].classList.remove('has-background-danger');
                notify("Designacao atualizada com sucesso!");
            },
            error: function (response) {
                notifyError('Ocorreu um erro ao atualizar a designacao!');
            },
            failure: function (response) {
                notifyError('Falha ao atualizar a designacao!');
            }
        });
      });
}

    function ConfirmApagar(id) {
        document.getElementById('txtHiddenStamp').value = id;
        Bulma('#ModalConfirmApagar').modal().open();
    }
    function ApagarDesignacao(id) {
        $.ajax({
            url: '/Reunioes/Designacao/',
            data: { "id": id },
            type: "DELETE",
            success: function (data) {
                window.location.reload();
            },
            error: function (data) {
                notifyError('Ocorreu um erro ao apagar essa designação!');
            },
            failure: function (data) {
                notifyError('Falha ao apagar essa designação!');
            }
        });
    }

    function AdicionarPublicadorDesignacaoConfirmar(id) {
        document.getElementById('txtHiddenStamp').value = id;
        Bulma('#modalAdicionarPublicadorDesignacao').modal().open();
    }

    function AdicionarPublicadorDesignacao(id, pub) {
        $.ajax({
            url: '/Reunioes/Publicador/',
            data: { "id": id, "pub": pub },
            type: "POST",
            success: function (data) {
                notify("Publicador adicionado com sucesso!");
                window.location.reload();
            },
            error: function (response) {
                notifyError('Ocorreu um erro ao adicionar o publicador!');
            },
            failure: function (response) {
                notifyError('Falha ao adicionar o publicador!');
            }
        });
}

</script>