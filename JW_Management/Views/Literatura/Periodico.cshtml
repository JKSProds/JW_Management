@model IEnumerable<JW_Management.Models.Literatura>
@{
    ViewData["Title"] = "Literatura - Entradas";
}

<div class="container">
    <div class="columns">
        <div class="column">
            <div class="tile">
                <div class="tile is-parent is-vertical">
                    <article class="tile is-child notification is-info">
                        <p class="title">
                            <span class="icon mr-3">
                                <i class="fa-solid fa-newspaper"></i>
                            </span>
                            <span>Saida de Periódicos</span>
                        </p>
                    </article>
                </div>
            </div>
        </div>
        <div class="column is-4">
            <button class="button is-info is-large is-pulled-right is-fullwidth " disabled>
                @Math.Abs(Model.Sum(l =>
                l.Quantidade))
            </button>
        </div>
    </div>
</div>
<hr />
<div class="container">
    @if (Model.Count() == 0)
    {
        <br />
        <button class="button is-danger is-large is-rounded is-fullwidth is-disabled">
            Não foram encontrados
            periódicos!
        </button>
    }
    else
    {
        <table class="table is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault()!.Publicador!.Nome)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault()!.Publicador!.Grupo!)
                    </th>
                    <th style="max-width:30px">
                        @Html.DisplayNameFor(model => model.FirstOrDefault()!.Quantidade)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault()!.Publicador!.Nome)">
                            <span>@item.Publicador!.Nome</span>
                        </td>
                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault()!.Publicador!.Grupo!)">
                            <span>@item.Publicador?.Grupo?.Responsavel?.Nome [@item.Publicador?.Grupo?.Id]</span>
                        </td>
                        <td data-label="@Html.DisplayNameFor(model => model.FirstOrDefault()!.Quantidade)">
                            <span>@Math.Abs(item.Quantidade)</span>
                        </td>
                        <td class="is-actions-cell">
                            <div class="buttons is-pulled-right is-flex-wrap-nowrap">
                                <button class="button is-success is-fullwidth is-large"
                                        onclick="GerarMovimento('@item.Stamp', @item.Quantidade, @item.Publicador.Id)">
                                    <i class="fas fa-circle-check"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<script>

    function GerarMovimento(stamp, qtd, idpub) {
        $.ajax({
            url: '/Literatura/Movimentos/',
            data: { "stamp": stamp, "qtd": -qtd, "idpub": 0 },
            type: "POST",
            success: function (data) {
                $.ajax({
                    url: '/Literatura/Movimentos/',
                    data: { "stamp": stamp, "qtd": qtd, "idpub": idpub },
                    type: "POST",
                    success: function (data) {
                        window.location.reload();
                    },
                    error: function (response) {
                        notifyError('Ocorreu um erro ao gerar um movimento!');
                    },
                    failure: function (response) {
                        notifyError('Falha ao gerar um movimento!');
                    }
                });
            },
            error: function (response) {
                notifyError('Ocorreu um erro ao gerar um movimento!');
            },
            failure: function (response) {
                notifyError('Falha ao gerar um movimento!');
            }
        });
    }
</script>